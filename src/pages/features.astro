---
import Layout from '../layouts/Layout.astro';
import Button from '../components/ui/Button.astro';
import Badge from '../components/ui/Badge.astro';
import { getLocale, loadTranslations, t, getLocalizedPath } from '../i18n/utils';
import type { Language } from '../i18n/config';

const locale: Language = getLocale(Astro.currentLocale);
await loadTranslations(locale);

// Feature definitions with hrefs in workflow order (from realtor perspective)
const featureHrefs = [
  '/features/lead-management',      // 1. Hier begint alles
  '/features/deal-pipeline',         // 2. Belangrijkste - deals sluiten
  '/features/smart-matching',        // 3. Smart matching (AI in Q2 2026)
  '/features/email-integration',     // 4. Communicatie (was: Email Integration)
  '/features/client-portal',         // 5. Voor je klanten
  '/features/property-management',   // 6. Vastgoed beheer
  '/features/reporting-analytics',   // 7. Rapportages & inzichten
];
---

<Layout
  title={t('features_overview.meta_title', locale)}
  description={t('features_overview.meta_description', locale)}
>
  <!-- Hero Section -->
  <section class="bg-gradient-to-br from-neutral-50 to-white py-16 lg:py-24">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl text-center">
      <Badge variant="primary" size="md" class="mb-6">
        {t('features_overview.hero.badge', locale)}
      </Badge>

      <h1 class="text-4xl sm:text-5xl lg:text-6xl font-display font-bold text-neutral-900 mb-6">
        {t('features_overview.hero.title', locale)}
      </h1>

      <p class="text-lg sm:text-xl text-neutral-700 mb-8 max-w-3xl mx-auto">
        {t('features_overview.hero.description', locale)}
      </p>

      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <Button variant="primary" size="lg" href="https://crm.tesoro.estate/auth/signup" target="_blank" rel="noopener noreferrer">
          {t('features_overview.hero.cta_primary', locale)}
        </Button>
        <Button variant="outline" size="lg" href={getLocalizedPath('/demo', locale)}>
          {t('features_overview.hero.cta_secondary', locale)}
        </Button>
      </div>
    </div>
  </section>

  <!-- Core Features Grid -->
  <section class="py-16 lg:py-24 bg-white">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
      <div class="text-center mb-16">
        <h2 class="text-3xl lg:text-4xl font-display font-bold text-neutral-900 mb-4">
          {t('features_overview.features_grid.title', locale)}
        </h2>
        <p class="text-lg text-neutral-700 max-w-2xl mx-auto">
          {t('features_overview.features_grid.description', locale)}
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {[
          { num: 1, icon: 'person_add' },
          { num: 2, icon: 'view_kanban' },
          { num: 3, icon: 'psychology' },
          { num: 4, icon: 'mail' },
          { num: 5, icon: 'account_circle' },
          { num: 6, icon: 'home' },
          { num: 7, icon: 'bar_chart' },
        ].map(({ num, icon }, index) => (
          <div class="feature-card">
            {num === 3 && (
              <div class="feature-card__roadmap-badge">
                <span class="icon icon-sm">schedule</span>
                Q2 2026
              </div>
            )}
            <div class="feature-card__icon">
              <span class="icon">{icon}</span>
            </div>
            <h3 class="feature-card__title">
              {t(`features_overview.features_grid.feature_${num}_title`, locale)}
            </h3>
            <p class="feature-card__desc">
              {t(`features_overview.features_grid.feature_${num}_description`, locale)}
            </p>

            <ul class="feature-card__benefits">
              {[1, 2, 3].map((benefitNum) => (
                <li class="feature-card__benefit">
                  <span class="icon icon-sm">check</span>
                  {t(`features_overview.features_grid.feature_${num}_benefit_${benefitNum}`, locale)}
                </li>
              ))}
            </ul>

            <a href={getLocalizedPath(featureHrefs[index], locale)} class="feature-card__cta">
              {t('features_overview.features_grid.cta_button', locale)}
              <span class="icon">arrow_forward</span>
            </a>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Integrations Section -->
  <section class="py-16 lg:py-24 bg-neutral-50">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
      <div class="text-center mb-16">
        <h2 class="text-3xl lg:text-4xl font-display font-bold text-neutral-900 mb-4">
          {t('features_overview.integrations.title', locale)}
        </h2>
        <p class="text-lg text-neutral-700 max-w-2xl mx-auto">
          {t('features_overview.integrations.description', locale)}
        </p>
      </div>

      <div class="grid grid-cols-2 md:grid-cols-4 gap-6 mb-12">
        {[1, 2, 3, 4, 5, 6, 7, 8].map((num) => (
          <div class="integration-card">
            <div class="integration-card__name">
              {t(`features_overview.integrations.integration_${num}_name`, locale)}
            </div>
            <div class="integration-card__category">
              {t(`features_overview.integrations.integration_${num}_category`, locale)}
            </div>
          </div>
        ))}
      </div>

      <div class="text-center">
        <p class="text-neutral-700 mb-4">{t('features_overview.integrations.missing_question', locale)}</p>
        <Button variant="outline" href={getLocalizedPath('/contact', locale)}>
          {t('features_overview.integrations.missing_cta', locale)}
        </Button>
      </div>
    </div>
  </section>

  <!-- Value Proposition Section -->
  <section class="py-16 lg:py-24 bg-white">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <div>
          <h2 class="text-3xl lg:text-4xl font-display font-bold text-neutral-900 mb-6">
            {t('features_overview.value_proposition.title', locale)}
          </h2>
          <div class="space-y-6">
            {[1, 2, 3].map((num) => (
              <div class="flex items-start gap-4">
                <div class="bg-primary/10 rounded-lg p-3 flex-shrink-0">
                  <div class="w-6 h-6 bg-primary rounded-full"></div>
                </div>
                <div>
                  <h3 class="font-semibold text-neutral-900 mb-2">
                    {t(`features_overview.value_proposition.benefit_${num}_title`, locale)}
                  </h3>
                  <p class="text-neutral-700">
                    {t(`features_overview.value_proposition.benefit_${num}_description`, locale)}
                  </p>
                </div>
              </div>
            ))}
          </div>
        </div>

        <div class="bg-gradient-to-br from-primary/5 to-secondary/5 rounded-2xl p-8">
          <h3 class="text-2xl font-bold text-neutral-900 mb-6 text-center">
            {t('features_overview.value_proposition.package_title', locale)}
          </h3>
          <div class="space-y-3">
            {[1, 2, 3, 4, 5].map((num) => (
              <div class="flex items-center gap-3">
                <span class="icon icon-sm text-success">check</span>
                <span>{t(`features_overview.value_proposition.package_feature_${num}`, locale)}</span>
              </div>
            ))}
          </div>

          <div class="text-center mt-8">
            <div class="text-3xl font-bold text-primary mb-2">
              {t('features_overview.value_proposition.package_price', locale)}
            </div>
            <p class="text-neutral-600 mb-4">
              {t('features_overview.value_proposition.package_price_description', locale)}
            </p>
            <Button variant="primary" href={getLocalizedPath('/pricing', locale)} class="w-full">
              {t('features_overview.value_proposition.package_cta', locale)}
            </Button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Final CTA -->
  <section class="bg-gradient-to-r from-primary to-secondary text-white py-16 lg:py-24">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl text-center">
      <h2 class="text-3xl lg:text-4xl font-display font-bold mb-6">
        {t('features_overview.final_cta.title', locale)}
      </h2>
      <p class="text-lg text-white/90 mb-8 max-w-2xl mx-auto">
        {t('features_overview.final_cta.description', locale)}
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <Button variant="secondary" size="lg" href="https://crm.tesoro.estate/auth/signup" target="_blank" rel="noopener noreferrer">
          {t('features_overview.final_cta.cta_primary', locale)}
        </Button>
        <Button variant="ghost" size="lg" href={getLocalizedPath('/demo', locale)} class="border-2 border-white hover:bg-white hover:text-primary">
          {t('features_overview.final_cta.cta_secondary', locale)}
        </Button>
      </div>
    </div>
  </section>
</Layout>

<style>
  /* FEATURE CARDS - Consistent with KB path selection cards */
  .feature-card {
    background: white;
    border: 2px solid #e2e8f0;
    border-radius: 16px;
    padding: 2rem;
    text-align: center;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .feature-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #003366 0%, #004080 100%);
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  /* Geometric corner accent - Tesoro T-inspired */
  .feature-card::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 80px;
    height: 80px;
    background: linear-gradient(135deg, rgba(0, 51, 102, 0.03) 0%, transparent 100%);
    clip-path: polygon(0 100%, 0 0, 100% 100%);
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .feature-card:hover {
    border-color: #003366;
    box-shadow: 0 12px 24px rgba(0, 51, 102, 0.15);
    transform: translateY(-4px);
  }

  .feature-card:hover::before {
    transform: scaleX(1);
  }

  .feature-card:hover::after {
    opacity: 1;
  }

  .feature-card__roadmap-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    display: inline-flex;
    align-items: center;
    gap: 0.375rem;
    padding: 0.375rem 0.75rem;
    background: linear-gradient(135deg, #F5B400 0%, #f59e0b 100%);
    color: white;
    font-size: 0.6875rem;
    font-weight: 700;
    border-radius: 20px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 8px rgba(245, 180, 0, 0.3);
  }

  .feature-card__roadmap-badge .icon {
    font-size: 0.875rem;
  }

  .feature-card__icon {
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .feature-card__icon .icon {
    font-size: 3rem;
    color: #003366;
    display: block;
  }

  .feature-card__title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 0.75rem;
    line-height: 1.3;
    letter-spacing: -0.01em;
  }

  .feature-card__desc {
    font-size: 0.9375rem;
    color: #64748b;
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .feature-card__benefits {
    list-style: none;
    padding: 0;
    margin: 0 0 1.5rem 0;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .feature-card__benefit {
    font-size: 0.875rem;
    color: #64748b;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-align: left;
  }

  .feature-card__benefit .icon {
    color: #10b981;
    flex-shrink: 0;
  }

  .feature-card__cta {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.875rem 1.5rem;
    background: #003366;
    color: white;
    font-weight: 600;
    font-size: 1rem;
    border-radius: 10px;
    text-decoration: none;
    transition: all 0.25s ease;
    box-shadow: 0 4px 12px rgba(0, 51, 102, 0.3);
  }

  .feature-card__cta:hover {
    background: #004080;
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(0, 51, 102, 0.4);
  }

  .feature-card__cta .icon {
    transition: transform 0.25s ease;
  }

  .feature-card__cta:hover .icon {
    transform: translateX(4px);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .feature-card {
      padding: 1.5rem;
    }

    .feature-card__icon .icon {
      font-size: 2.5rem;
    }

    .feature-card__title {
      font-size: 1.125rem;
    }
  }

  /* INTEGRATION CARDS */
  .integration-card {
    background: white;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 1.5rem;
    text-align: center;
    transition: all 0.25s ease;
  }

  .integration-card:hover {
    border-color: #003366;
    box-shadow: 0 8px 16px -4px rgba(0, 51, 102, 0.15);
    transform: translateY(-2px);
  }

  .integration-card__name {
    font-weight: 600;
    font-size: 0.875rem;
    color: #1e293b;
    margin-bottom: 0.25rem;
  }

  .integration-card__category {
    font-size: 0.75rem;
    color: #64748b;
  }
</style>
