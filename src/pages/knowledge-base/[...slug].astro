---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { getLocale, getLocalizedPath } from '../../i18n/utils';
import type { Language } from '../../types/knowledge-base';
import KnowledgeBaseSectionRenderer from '../../components/knowledge-base/KnowledgeBaseSectionRenderer.astro';
import { getAuthor } from '../../utils/authors';

export async function getStaticPaths() {
  const articles = await getCollection('knowledge-base');

  return articles.map(article => ({
    params: { slug: article.data.meta.id },
    props: { article }
  }));
}

const { article } = Astro.props;
const { slug } = Astro.params;
const locale: Language = (getLocale(Astro.currentLocale, Astro.url) as Language) || 'nl';

// Get article data
const articleData = article.data;
const author = getAuthor(articleData.meta.authorId);

// Localized content
const title = articleData.hero.title[locale];
const description = articleData.hero.description[locale];

// Generate TOC from sections
const tocItems = articleData.sections
  .filter(section => section.title)
  .map(section => ({
    id: section.id,
    title: section.title![locale] // We know title exists because we filtered
  }));

// Page metadata
const pageTitle = `${title} - Tesoro CRM Knowledge Base`;
const pageDescription = description;
---

<Layout title={pageTitle} description={pageDescription}>
  <article class="kb-article">
    <!-- Hero Section -->
    <header class="kb-article__hero">
      <div class="kb-article__container">
        <nav class="kb-article__breadcrumb">
          <a href={getLocalizedPath('/knowledge-base', locale)} class="kb-article__breadcrumb-link">
            {locale === 'nl' ? 'Kennisbank' : locale === 'es' ? 'Base de Conocimientos' : 'Knowledge Base'}
          </a>
          <span class="kb-article__breadcrumb-separator">›</span>
          <span class="kb-article__breadcrumb-current">{title}</span>
        </nav>

        <div class="kb-article__hero-content">
          <div class="kb-article__meta">
            <span class="kb-article__category">{articleData.meta.category}</span>
            <span class="kb-article__difficulty kb-article__difficulty--{articleData.meta.difficulty}">
              {articleData.meta.difficulty}
            </span>
            {articleData.meta.readingTime && (
              <span class="kb-article__reading-time">
                <span class="icon icon-sm">schedule</span> {articleData.meta.readingTime} {locale === 'nl' ? 'min' : 'min'}
              </span>
            )}
          </div>

          <h1 class="kb-article__title">
            {title.includes(':') ? (
              <>
                <span class="kb-article__title-main">{title.split(':')[0]}</span>
                <span class="kb-article__title-sub">{title.split(':')[1].trim()}</span>
              </>
            ) : (
              title
            )}
          </h1>

          <p class="kb-article__description">{description}</p>

          {author && (
            <div class="kb-article__author">
              <img
                src={author.image}
                alt={author.name}
                class="kb-article__author-avatar"
                width="40"
                height="40"
              />
              <div class="kb-article__author-info">
                <span class="kb-article__author-name">{author.name}</span>
                <span class="kb-article__author-bio">{author.bio[locale]}</span>
              </div>
            </div>
          )}
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <div class="kb-article__container">
      <div class="kb-article__content-wrapper">
        <!-- Table of Contents - Desktop -->
        {tocItems.length > 0 && (
          <aside class="kb-article__toc">
            <div class="kb-article__toc-sticky">
              <h3 class="kb-article__toc-title">
                {locale === 'nl' ? 'Inhoudsopgave' : locale === 'es' ? 'Tabla de Contenidos' : 'Table of Contents'}
              </h3>
              <nav class="kb-article__toc-nav">
                <ul class="kb-article__toc-list">
                  {tocItems.map(item => (
                    <li class="kb-article__toc-item">
                      <a href={`#${item.id}`} class="kb-article__toc-link">
                        {item.title}
                      </a>
                    </li>
                  ))}
                </ul>
              </nav>
            </div>
          </aside>
        )}

        <!-- Article Content -->
        <main class="kb-article__content">
          {articleData.sections.map(section => (
            <KnowledgeBaseSectionRenderer section={section} lang={locale} />
          ))}

          <!-- Related Articles -->
          {articleData.relatedArticles && articleData.relatedArticles.length > 0 && (
            <section class="kb-article__related">
              <h2 class="kb-article__related-title">
                {locale === 'nl' ? 'Gerelateerde Artikelen' : locale === 'es' ? 'Artículos Relacionados' : 'Related Articles'}
              </h2>
              <div class="kb-article__related-grid">
                {articleData.relatedArticles.map(relatedId => {
                  // In a real implementation, you'd fetch the related articles
                  // For now, just show the IDs as placeholders
                  return (
                    <a href={getLocalizedPath(`/knowledge-base/${relatedId}`, locale)} class="kb-article__related-card">
                      <h3>{relatedId}</h3>
                    </a>
                  );
                })}
              </div>
            </section>
          )}

          <!-- FAQ Section -->
          {articleData.faq && articleData.faq.length > 0 && (
            <section class="kb-article__faq">
              <h2 class="kb-article__faq-title">
                {locale === 'nl' ? 'Veelgestelde Vragen' : locale === 'es' ? 'Preguntas Frecuentes' : 'Frequently Asked Questions'}
              </h2>
              <div class="kb-article__faq-list">
                {articleData.faq.map(item => (
                  <details class="kb-article__faq-item">
                    <summary class="kb-article__faq-question">
                      <span class="icon kb-article__faq-icon">chevron_right</span>
                      <span>{item.question[locale]}</span>
                    </summary>
                    <div class="kb-article__faq-answer" set:html={item.answer[locale].text} />
                  </details>
                ))}
              </div>
            </section>
          )}

          <!-- Article Footer -->
          <footer class="kb-article__footer">
            <div class="kb-article__footer-content">
              <p class="kb-article__footer-help">
                {locale === 'nl' ? 'Vond je dit artikel nuttig?' : locale === 'es' ? '¿Te resultó útil este artículo?' : 'Did you find this article helpful?'}
              </p>
              <div class="kb-article__footer-actions">
                <button class="kb-article__footer-btn kb-article__footer-btn--positive">
                  <span class="icon icon-sm">thumb_up</span> {locale === 'nl' ? 'Ja' : locale === 'es' ? 'Sí' : 'Yes'}
                </button>
                <button class="kb-article__footer-btn kb-article__footer-btn--negative">
                  <span class="icon icon-sm">thumb_down</span> {locale === 'nl' ? 'Nee' : locale === 'es' ? 'No' : 'No'}
                </button>
              </div>
            </div>

            <div class="kb-article__footer-navigation">
              <a href={getLocalizedPath('/knowledge-base', locale)} class="kb-article__back-link">
                ← {locale === 'nl' ? 'Terug naar Kennisbank' : locale === 'es' ? 'Volver a Base de Conocimientos' : 'Back to Knowledge Base'}
              </a>
            </div>
          </footer>
        </main>
      </div>
    </div>
  </article>
</Layout>

<style>
  .kb-article {
    min-height: 100vh;
    background: #fafafa;
  }

  .kb-article__container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  /* Clean Hero Section */
  .kb-article__hero {
    background: linear-gradient(135deg, #003366 0%, #004d99 100%);
    color: white;
    padding: 2.5rem 0 2rem;
  }

  .kb-article__breadcrumb {
    margin-bottom: 1.5rem;
    font-size: 0.875rem;
  }

  .kb-article__breadcrumb-link {
    color: rgba(255, 255, 255, 0.75);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .kb-article__breadcrumb-link:hover {
    color: white;
  }

  .kb-article__breadcrumb-separator {
    margin: 0 0.5rem;
    color: rgba(255, 255, 255, 0.5);
  }

  .kb-article__breadcrumb-current {
    color: rgba(255, 255, 255, 0.95);
  }

  .kb-article__hero-content {
    max-width: 800px;
  }

  .kb-article__meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
    flex-wrap: wrap;
  }

  .kb-article__category {
    background: rgba(255, 255, 255, 0.15);
    color: white;
    padding: 0.25rem 0.625rem;
    border-radius: 4px;
    font-size: 0.6875rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .kb-article__difficulty {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-weight: 500;
  }

  .kb-article__difficulty--beginner {
    background: rgba(209, 250, 229, 0.2);
    color: #d1fae5;
  }

  .kb-article__difficulty--intermediate {
    background: rgba(254, 243, 199, 0.2);
    color: #fef3c7;
  }

  .kb-article__difficulty--advanced {
    background: rgba(254, 226, 226, 0.2);
    color: #fee2e2;
  }

  .kb-article__reading-time {
    color: rgba(255, 255, 255, 0.9);
    font-size: 0.875rem;
  }

  .kb-article__title {
    font-size: 2.25rem;
    font-weight: 600;
    margin-bottom: 1rem;
    line-height: 1.25;
    letter-spacing: -0.02em;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .kb-article__title-main {
    display: block;
  }

  .kb-article__title-sub {
    display: block;
    font-size: 1.5rem;
    font-weight: 500;
    opacity: 0.9;
  }

  .kb-article__description {
    font-size: 1.125rem;
    opacity: 0.92;
    margin-bottom: 1.75rem;
    line-height: 1.65;
    font-weight: 400;
  }

  .kb-article__author {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    backdrop-filter: blur(10px);
  }

  .kb-article__author-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.3);
  }

  .kb-article__author-info {
    display: flex;
    flex-direction: column;
  }

  .kb-article__author-name {
    font-weight: 600;
    font-size: 0.875rem;
  }

  .kb-article__author-bio {
    font-size: 0.75rem;
    opacity: 0.9;
  }

  /* Clean Content Layout */
  .kb-article__content-wrapper {
    display: grid;
    grid-template-columns: 250px 1fr;
    gap: 3rem;
    padding: 3rem 0;
  }

  /* Minimal Table of Contents */
  .kb-article__toc {
    position: relative;
  }

  .kb-article__toc-sticky {
    position: sticky;
    top: 2rem;
  }

  .kb-article__toc-title {
    font-size: 1rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 0.875rem;
    letter-spacing: -0.01em;
  }

  .kb-article__toc-nav {
    background: white;
    border-radius: 8px;
    padding: 1rem;
    border: 1px solid #e2e8f0;
  }

  .kb-article__toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .kb-article__toc-item {
    margin-bottom: 0.5rem;
  }

  .kb-article__toc-link {
    display: block;
    padding: 0.5rem 0.625rem;
    color: #64748b;
    text-decoration: none;
    font-size: 0.875rem;
    border-radius: 6px;
    transition: all 0.2s;
    line-height: 1.5;
  }

  .kb-article__toc-link:hover {
    color: #003366;
    background: #f1f5f9;
  }

  /* Article Content */
  .kb-article__content {
    max-width: none;
  }

  /* Clean Related Articles */
  .kb-article__related {
    margin-top: 3rem;
    padding-top: 2.5rem;
    border-top: 1px solid #e2e8f0;
  }

  .kb-article__related-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 1.25rem;
    letter-spacing: -0.01em;
  }

  .kb-article__related-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 1rem;
  }

  .kb-article__related-card {
    display: block;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    text-decoration: none;
    color: inherit;
    border: 1px solid #e2e8f0;
    transition: all 0.2s;
  }

  .kb-article__related-card:hover {
    border-color: #cbd5e1;
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1);
    transform: translateY(-1px);
  }

  /* Minimal FAQ Section */
  .kb-article__faq {
    margin-top: 3rem;
    padding-top: 2.5rem;
    border-top: 1px solid #e2e8f0;
  }

  .kb-article__faq-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 1.25rem;
    letter-spacing: -0.01em;
  }

  .kb-article__faq-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .kb-article__faq-item {
    background: white;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    padding: 1.125rem;
    transition: all 0.2s;
  }

  .kb-article__faq-item:hover {
    border-color: #cbd5e1;
  }

  .kb-article__faq-item[open] {
    background: #fafafa;
    border-color: #003366;
  }

  .kb-article__faq-question {
    font-weight: 600;
    color: #1e293b;
    cursor: pointer;
    list-style: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9375rem;
  }

  .kb-article__faq-question::-webkit-details-marker {
    display: none;
  }

  .kb-article__faq-icon {
    font-size: 0.875rem;
    color: #64748b;
    transition: transform 0.2s;
    flex-shrink: 0;
  }

  .kb-article__faq-item[open] .kb-article__faq-icon {
    transform: rotate(90deg);
    color: #003366;
  }

  .kb-article__faq-answer {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid #e2e8f0;
    color: #475569;
    line-height: 1.6;
  }

  /* Clean Article Footer */
  .kb-article__footer {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid #e2e8f0;
  }

  .kb-article__footer-content {
    text-align: center;
    margin-bottom: 2rem;
  }

  .kb-article__footer-help {
    font-size: 1rem;
    color: #1e293b;
    margin-bottom: 1rem;
    font-weight: 500;
  }

  .kb-article__footer-actions {
    display: flex;
    justify-content: center;
    gap: 0.875rem;
    margin-bottom: 2rem;
  }

  .kb-article__footer-btn {
    padding: 0.625rem 1.25rem;
    border: 1px solid #e2e8f0;
    border-radius: 6px;
    background: white;
    color: #64748b;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 0.9375rem;
  }

  .kb-article__footer-btn:hover {
    border-color: #cbd5e1;
    background: #f8fafc;
  }

  .kb-article__footer-btn--positive:hover {
    background: #ecfdf5;
    border-color: #10b981;
    color: #047857;
  }

  .kb-article__footer-btn--negative:hover {
    background: #fef2f2;
    border-color: #dc2626;
    color: #991b1b;
  }

  .kb-article__footer-navigation {
    text-align: center;
  }

  .kb-article__back-link {
    color: #003366;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s;
    font-size: 0.9375rem;
  }

  .kb-article__back-link:hover {
    color: #F5B400;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .kb-article__content-wrapper {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .kb-article__toc {
      order: -1;
    }

    .kb-article__toc-sticky {
      position: static;
    }
  }

  @media (max-width: 768px) {
    .kb-article__hero {
      padding: 2rem 0 1.5rem;
    }

    .kb-article__title {
      font-size: 2rem;
    }

    .kb-article__title-sub {
      font-size: 1.25rem;
    }

    .kb-article__description {
      font-size: 1.125rem;
    }

    .kb-article__author {
      flex-direction: column;
      text-align: center;
      gap: 0.75rem;
    }

    .kb-article__footer-actions {
      flex-direction: column;
      align-items: center;
    }
  }
</style>
