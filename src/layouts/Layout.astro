---
// @ts-check
import { ViewTransitions } from 'astro:transitions';
import { Font } from 'astro:assets';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import StructuredData from '../components/StructuredData.astro';
import { getLocale, getAlternateLinks } from '../i18n/utils';
import type { Language } from '../i18n/config';

export interface Props {
  title?: string;
  description?: string;
}

const locale: Language = getLocale(Astro.currentLocale, Astro.url);
const currentPath = Astro.url.pathname;
const alternateLinks = getAlternateLinks(currentPath);

// Get site URL from environment or use current origin
const siteUrl = import.meta.env.SITE || Astro.url.origin;

// Default meta tags per language
const defaultMeta = {
  es: {
    title: 'Tesoro CRM - Captación inteligente para profesionales inmobiliarios',
    description: 'Automatiza la captación de propiedades con IA y maximiza tu ROI inmobiliario',
  },
  en: {
    title: 'Tesoro CRM - Intelligent Lead Generation for Real Estate Professionals',
    description: 'Automate property lead generation with AI and maximize your real estate ROI',
  },
  nl: {
    title: 'Tesoro CRM - Intelligente Leadgeneratie voor Vastgoedprofessionals',
    description: 'Automatiseer vastgoed leadgeneratie met AI en maximaliseer je ROI',
  },
};

const {
  title = defaultMeta[locale].title,
  description = defaultMeta[locale].description,
} = Astro.props;
---

<!doctype html>
<html lang={locale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description || defaultMeta[locale].description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
		
		<!-- Canonical URL -->
		<link rel="canonical" href={`${siteUrl}${currentPath}`} />
		
		<!-- Open Graph -->
		<meta property="og:type" content="website" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:locale" content={locale === 'es' ? 'es_ES' : locale === 'en' ? 'en_US' : 'nl_NL'} />
		<meta property="og:url" content={`${siteUrl}${currentPath}`} />
		
		<!-- Hreflang Tags for SEO -->
		{alternateLinks.map(({ lang, href }) => (
			<link rel="alternate" hreflang={lang} href={`${siteUrl}${href}`} />
		))}
		<link rel="alternate" hreflang="x-default" href={`${siteUrl}/`} />
		
		<!-- Optimized fonts with automatic preloading -->
		<Font cssVariable="--font-inter" preload />
		<Font cssVariable="--font-poppins" preload />
		
		<!-- Cloudflare NLWeb AI Search -->
		<link rel="stylesheet" href="https://tesoro-crm-hq-search-nlweb.tesorocrm.workers.dev/nlweb-dropdown-chat.css">
		
		<!-- Structured Data Component -->
		<StructuredData locale={locale} siteUrl={siteUrl} />
		
		<!-- View Transitions -->
		<ViewTransitions />
	</head>
	<body class="font-sans text-neutral-800 antialiased overflow-x-hidden">
		<!-- Cloudflare NLWeb AI Search Container -->
		<div id="docs-search-container"></div>
		
		<Header />
		<main class="overflow-x-hidden">
			<slot />
		</main>
		<Footer />
		
		<!-- Cloudflare NLWeb AI Search Script -->
		<script type="module">
			try {
				const { NLWebDropdownChat } = await import('https://tesoro-crm-hq-search-nlweb.tesorocrm.workers.dev/nlweb-dropdown-chat.js');
				
				const chat = new NLWebDropdownChat({
					containerId: 'docs-search-container',
					site: 'https://new.tesorohq.io',
					placeholder: 'Zoek in Tesoro CRM...',
					endpoint: 'https://tesoro-crm-hq-search-nlweb.tesorocrm.workers.dev'
				});
				
				console.log('NLWeb AI Search loaded successfully');
			} catch (error) {
				console.error('Failed to load NLWeb AI Search:', error);
			}
		</script>
	</body>
</html>