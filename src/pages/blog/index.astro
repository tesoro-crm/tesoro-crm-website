---
import Layout from '../../layouts/Layout.astro';
import ImageWithFallback from '../../components/blog/ImageWithFallback.astro';
import { getCollection } from 'astro:content';
import { getLocale, getLocalizedPath } from '../../i18n/utils';
import type { Language } from '../../types/blog';
import { getAuthor } from '../../utils/authors';

const posts = await getCollection('blog', ({ data }) => !data.meta.draft);
const locale: Language = (getLocale(Astro.currentLocale, Astro.url) as Language) || 'nl';

// Sort posts by date (newest first)
const sortedPosts = posts.sort((a, b) => {
  const dateA = (a.data.meta as any).publishDate || (a.data.hero as any).publishDate;
  const dateB = (b.data.meta as any).publishDate || (b.data.hero as any).publishDate;
  return new Date(dateB).getTime() - new Date(dateA).getTime();
});

// Get featured posts
const featuredPosts = sortedPosts.filter(post => post.data.meta.featured);

// Get categories
const categories = [...new Set(posts.map(post => post.data.meta.category))];

// Category color mapping function
function getCategoryStyle(category: string) {
  const categoryKey = category.toLowerCase().replace(/\s+/g, '-');
  return {
    color: `var(--category-${categoryKey}, var(--tesoro-orange))`,
    backgroundColor: `var(--category-${categoryKey}-bg, #FFF4E6)`
  };
}

// Get current page from URL
const currentPage = parseInt(Astro.url.searchParams.get('page') || '1');
const postsPerPage = 9;

// Get all posts (don't exclude featured from grid)
const allPostsForGrid = sortedPosts;
const totalPages = Math.ceil(allPostsForGrid.length / postsPerPage);
const paginatedPosts = allPostsForGrid.slice(
  (currentPage - 1) * postsPerPage,
  currentPage * postsPerPage
);

// Localized texts
const pageTitle = locale === 'nl' ? 'Tesoro CRM Blog - Inzichten & Verhalen' : locale === 'es' ? 'Blog de Tesoro CRM - Perspectivas e Historias' : 'Tesoro CRM Blog - Insights & Stories';
const pageDescription = locale === 'nl'
  ? 'Ontdek de laatste inzichten over CRM, vastgoedmarketing en bedrijfsgroei van Tesoro CRM experts.'
  : locale === 'es'
  ? 'Descubre las últimas perspectivas sobre CRM, marketing inmobiliario y crecimiento empresarial de los expertos de Tesoro CRM.'
  : 'Discover the latest insights on CRM, real estate marketing, and business growth from Tesoro CRM experts.';
const allPostsText = locale === 'nl' ? 'Alle Posts' : locale === 'es' ? 'Todas las Publicaciones' : 'All Posts';
const featuredText = locale === 'nl' ? 'Uitgelichte Artikelen' : locale === 'es' ? 'Artículos Destacados' : 'Featured Articles';
const readTimeText = locale === 'nl' ? 'min lezen' : locale === 'es' ? 'min de lectura' : 'min read';
---

<Layout
  title={pageTitle}
  description={pageDescription}
>
  <section class="blog-index">
    <div class="blog-index__container">
      <!-- Hero Featured Post - Magazine Style -->
      {featuredPosts.length > 0 && (() => {
        const postData = featuredPosts[0].data;
        const title = postData.hero.title[locale];
        const description = postData.hero.description[locale];
        const heroImage = postData.hero.image;
        const publishDateString = (postData.meta as any).publishDate || (postData.hero as any).publishDate;
        const publishDate = new Date(publishDateString);
        const authorId = (postData.meta as any).authorId || (postData.meta as any).author?.id || 'maria-perez';
        const author = getAuthor(authorId);

        return (
          <article class="blog-index__hero">
            <a href={getLocalizedPath(`/blog/${postData.meta.id}`, locale)} class="blog-index__hero-link">
              <div class="blog-index__hero-image-container">
                <ImageWithFallback
                  src={heroImage.src}
                  alt={heroImage.alt[locale]}
                  width={heroImage.width || 1600}
                  height={heroImage.height || 900}
                  loading="eager"
                  class="blog-index__hero-image"
                  aspectRatio="16/9"
                  clickable={false}
                />
                <div class="blog-index__hero-gradient"></div>

                {/* Content overlaid on image */}
                <div class="blog-index__hero-content">
                  <div class="blog-index__hero-meta">
                    <span class="blog-index__hero-category">{postData.meta.category}</span>
                    <span class="blog-index__hero-divider">·</span>
                    <time datetime={publishDateString}>
                      {publishDate.toLocaleDateString(locale === 'nl' ? 'nl-NL' : locale === 'es' ? 'es-ES' : 'en-US', {
                        month: 'long',
                        day: 'numeric',
                        year: 'numeric'
                      })}
                    </time>
                  </div>
                  <h1 class="blog-index__hero-title">{title}</h1>
                  <p class="blog-index__hero-description">{description}</p>
                  {author && (
                    <div class="blog-index__hero-author">
                      <ImageWithFallback
                        src={author.image}
                        alt={author.name}
                        width={32}
                        height={32}
                        loading="eager"
                        class="blog-index__hero-author-avatar"
                        aspectRatio="1/1"
                        clickable={false}
                      />
                      <span class="blog-index__hero-author-name">{author.name}</span>
                    </div>
                  )}
                </div>
              </div>
            </a>
          </article>
        );
      })()}

      <!-- Bento Box Featured Posts -->
      {featuredPosts.length > 1 && (
        <div class="blog-index__bento">
          <div class="blog-index__bento-header">
            <span class="blog-index__section-label">{featuredText}</span>
          </div>
          <div class="blog-index__bento-grid">
            {featuredPosts.slice(1, 4).map((post, index) => {
              const postData = post.data;
              const title = postData.hero.title[locale];
              const heroImage = postData.hero.image;
              const publishDateString = (postData.meta as any).publishDate || (postData.hero as any).publishDate;
              const publishDate = new Date(publishDateString);
              const authorId = (postData.meta as any).authorId || (postData.meta as any).author?.id || 'maria-perez';
              const author = getAuthor(authorId);

              return (
                <article class={`blog-index__bento-card blog-index__bento-card--${index + 1}`}>
                  <a href={getLocalizedPath(`/blog/${postData.meta.id}`, locale)} class="blog-index__bento-link">
                    <div class="blog-index__bento-image-wrapper">
                      <ImageWithFallback
                        src={heroImage.src}
                        alt={heroImage.alt[locale]}
                        width={heroImage.width || 800}
                        height={heroImage.height || 600}
                        loading="lazy"
                        class="blog-index__bento-image"
                        aspectRatio="4/3"
                        clickable={false}
                      />
                      <div class="blog-index__bento-overlay"></div>
                    </div>
                    <div class="blog-index__bento-content">
                      <span class="blog-index__bento-category">{postData.meta.category}</span>
                      <h3 class="blog-index__bento-title">{title}</h3>
                      <div class="blog-index__bento-meta">
                        {author && (
                          <>
                            <ImageWithFallback
                              src={author.image}
                              alt={author.name}
                              width={24}
                              height={24}
                              loading="lazy"
                              class="blog-index__bento-author-avatar"
                              aspectRatio="1/1"
                              clickable={false}
                            />
                            <span class="blog-index__bento-author-name">{author.name}</span>
                            <span class="blog-index__bento-divider">·</span>
                          </>
                        )}
                        <time datetime={publishDateString}>
                          {publishDate.toLocaleDateString(locale === 'nl' ? 'nl-NL' : locale === 'es' ? 'es-ES' : 'en-US', {
                            month: 'short',
                            day: 'numeric'
                          })}
                        </time>
                      </div>
                    </div>
                  </a>
                </article>
              );
            })}
          </div>
        </div>
      )}

      <!-- All Posts -->
      <section class="blog-index__all-posts">
        <div class="blog-index__all-posts-header">
          <h2 class="blog-index__all-posts-title">
            <span class="blog-index__section-label">
              {Astro.url.searchParams.get('category')
                ? `${Astro.url.searchParams.get('category')} ${locale === 'nl' ? 'Artikelen' : locale === 'es' ? 'Artículos' : 'Articles'}`
                : locale === 'nl' ? 'Laatste Artikelen' : locale === 'es' ? 'Últimos Artículos' : 'Latest Articles'
              }
            </span>
          </h2>
          <!-- Category Filter -->
          <div class="blog-index__filters">
            <a href={getLocalizedPath('/blog', locale)} class={`blog-index__filter ${!Astro.url.searchParams.get('category') ? 'blog-index__filter--active' : ''}`}>
              {allPostsText}
            </a>
            {categories.map(category => (
              <a
                href={getLocalizedPath(`/blog?category=${encodeURIComponent(category)}`, locale)}
                class={`blog-index__filter ${Astro.url.searchParams.get('category') === category ? 'blog-index__filter--active' : ''}`}
              >
                {category}
              </a>
            ))}
          </div>
        </div>

        <div class="blog-index__posts-grid">
          {paginatedPosts.map(post => {
            const postData = post.data;
            const title = postData.hero.title[locale];
            const description = postData.hero.description[locale];
            const heroImage = postData.hero.image;
            const publishDateString = (postData.meta as any).publishDate || (postData.hero as any).publishDate;
            const publishDate = new Date(publishDateString);
            const authorId = (postData.meta as any).authorId || (postData.meta as any).author?.id || 'maria-perez';
            const author = getAuthor(authorId);

            return (
              <article class="blog-index__post-card">
                <a href={getLocalizedPath(`/blog/${postData.meta.id}`, locale)} class="blog-index__post-link">
                  <div class="blog-index__post-image-wrapper">
                    <ImageWithFallback
                      src={heroImage.src}
                      alt={heroImage.alt[locale]}
                      width={heroImage.width || 800}
                      height={heroImage.height || 500}
                      loading="lazy"
                      class="blog-index__post-image"
                      aspectRatio="8/5"
                      clickable={false}
                    />
                  </div>
                  <div class="blog-index__post-content">
                    <span class="blog-index__post-category">{postData.meta.category}</span>
                    <h3 class="blog-index__post-title">{title}</h3>
                    <p class="blog-index__post-description">{description}</p>
                    <div class="blog-index__post-meta">
                      {author && (
                        <>
                          <ImageWithFallback
                            src={author.image}
                            alt={author.name}
                            width={32}
                            height={32}
                            loading="lazy"
                            class="blog-index__post-author-avatar"
                            aspectRatio="1/1"
                            clickable={false}
                          />
                          <span class="blog-index__post-author-name">{author.name}</span>
                          <span class="blog-index__post-divider">·</span>
                        </>
                      )}
                      <time datetime={publishDateString}>
                        {publishDate.toLocaleDateString(locale === 'nl' ? 'nl-NL' : locale === 'es' ? 'es-ES' : 'en-US', {
                          month: 'short',
                          day: 'numeric',
                          year: 'numeric'
                        })}
                      </time>
                    </div>
                  </div>
                </a>
              </article>
            );
          })}
        </div>

        <!-- Pagination -->
        {totalPages > 1 && (
          <nav class="blog-index__pagination">
            {currentPage > 1 && (
              <a
                href={getLocalizedPath(`/blog?page=${currentPage - 1}${Astro.url.searchParams.get('category') ? `&category=${Astro.url.searchParams.get('category')}` : ''}`, locale)}
                class="blog-index__pagination-link blog-index__pagination-link--prev"
              >
                ← {locale === 'nl' ? 'Vorige' : locale === 'es' ? 'Anterior' : 'Previous'}
              </a>
            )}

            <div class="blog-index__pagination-numbers">
              {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (
                <a
                  href={getLocalizedPath(`/blog?page=${page}${Astro.url.searchParams.get('category') ? `&category=${Astro.url.searchParams.get('category')}` : ''}`, locale)}
                  class={`blog-index__pagination-number ${page === currentPage ? 'blog-index__pagination-number--active' : ''}`}
                >
                  {page}
                </a>
              ))}
            </div>

            {currentPage < totalPages && (
              <a
                href={getLocalizedPath(`/blog?page=${currentPage + 1}${Astro.url.searchParams.get('category') ? `&category=${Astro.url.searchParams.get('category')}` : ''}`, locale)}
                class="blog-index__pagination-link blog-index__pagination-link--next"
              >
                {locale === 'nl' ? 'Volgende' : locale === 'es' ? 'Siguiente' : 'Next'} →
              </a>
            )}
          </nav>
        )}
      </section>

      <!-- Newsletter -->
      <section class="blog-index__newsletter">
        <div class="blog-index__newsletter-content">
          <span class="blog-index__newsletter-label">Newsletter</span>
          <h2 class="blog-index__newsletter-title">
            {locale === 'nl' ? 'Blijf op de hoogte' : locale === 'es' ? 'Mantente informado' : 'Stay in the loop'}
          </h2>
          <p class="blog-index__newsletter-description">
            {pageDescription}
          </p>
          <form class="blog-index__newsletter-form" data-newsletter-form>
            <input
              type="email"
              placeholder={locale === 'nl' ? 'Jouw e-mailadres' : locale === 'es' ? 'Tu correo electrónico' : 'Your email address'}
              required
              class="blog-index__newsletter-input"
            />
            <button type="submit" class="blog-index__newsletter-submit">
              {locale === 'nl' ? 'Aanmelden' : locale === 'es' ? 'Suscribirse' : 'Subscribe'}
            </button>
          </form>
        </div>
      </section>
    </div>
  </section>
</Layout>

<script>
  // Newsletter signup
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector<HTMLFormElement>('[data-newsletter-form]');
    if (!form) return;

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const emailInput = form.querySelector<HTMLInputElement>('input[type="email"]');
      if (!emailInput) return;
      const email = emailInput.value;

      try {
        const response = await fetch('/api/newsletter', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email }),
        });

        if (response.ok) {
          alert('Thanks for subscribing! Check your email for confirmation.');
          form.reset();
        } else {
          alert('Something went wrong. Please try again.');
        }
      } catch (error) {
        alert('Something went wrong. Please try again.');
      }
    });
  });
</script>

<style>
  /* Modern Magazine-Style Blog */
  .blog-index {
    min-height: 100vh;
    background: #fafafa;
    padding-top: 80px;
  }

  .blog-index__container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 3rem 1.5rem;
  }

  /* Hero - Clean Card Style */
  .blog-index__hero {
    margin-bottom: 4rem;
  }

  .blog-index__hero-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .blog-index__hero-image-container {
    position: relative;
    border-radius: 16px;
    overflow: hidden;
    height: 500px;
    background: white;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }

  .blog-index__hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .blog-index__hero-link:hover .blog-index__hero-image {
    transform: scale(1.05);
  }

  .blog-index__hero-gradient {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      180deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0.6) 100%
    );
  }

  .blog-index__hero-content {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 2rem;
    color: white;
    z-index: 10;
  }

  .blog-index__hero-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .blog-index__hero-category {
    background: #F5B400;
    color: #003366;
    padding: 0.375rem 0.875rem;
    border-radius: 4px;
    font-weight: 700;
    font-size: 0.7rem;
  }

  .blog-index__hero-divider {
    opacity: 0.7;
  }

  .blog-index__hero-title {
    font-size: 2rem;
    font-weight: 800;
    line-height: 1.2;
    margin-bottom: 0.75rem;
    max-width: 800px;
  }

  .blog-index__hero-description {
    font-size: 1rem;
    line-height: 1.5;
    margin-bottom: 1rem;
    max-width: 700px;
    opacity: 0.95;
  }

  .blog-index__hero-author {
    display: flex;
    align-items: center;
    gap: 0.625rem;
  }

  .blog-index__hero-author-avatar {
    width: 28px;
    height: 28px;
    border-radius: 50%;
    border: 2px solid white;
  }

  .blog-index__hero-author-name {
    font-size: 0.875rem;
    font-weight: 600;
  }

  /* Bento Box Grid */
  .blog-index__bento {
    margin-bottom: 6rem;
  }

  .blog-index__bento-header {
    margin-bottom: 2rem;
  }

  .blog-index__section-label {
    display: inline-block;
    padding: 0.5rem 1.5rem;
    background: #003366;
    color: white;
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    border-radius: 4px;
  }

  .blog-index__bento-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
  }

  .blog-index__bento-card {
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    background: white;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .blog-index__bento-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
  }

  /* Asymmetric sizing */
  .blog-index__bento-card--1 {
    grid-column: span 2;
  }

  .blog-index__bento-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .blog-index__bento-image-wrapper {
    position: relative;
    aspect-ratio: 4/3;
    overflow: hidden;
  }

  .blog-index__bento-card--1 .blog-index__bento-image-wrapper {
    aspect-ratio: 16/9;
  }

  .blog-index__bento-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .blog-index__bento-link:hover .blog-index__bento-image {
    transform: scale(1.05);
  }

  .blog-index__bento-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(180deg, transparent 0%, rgba(0, 0, 0, 0.4) 100%);
  }

  .blog-index__bento-content {
    padding: 1.5rem;
  }

  .blog-index__bento-card--1 .blog-index__bento-content {
    padding: 2rem;
  }

  .blog-index__bento-category {
    display: inline-block;
    font-size: 0.7rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: #003366;
    margin-bottom: 0.75rem;
  }

  .blog-index__bento-title {
    font-size: 1.25rem;
    font-weight: 700;
    line-height: 1.3;
    color: #0f172a;
    margin-bottom: 1rem;
  }

  .blog-index__bento-card--1 .blog-index__bento-title {
    font-size: 2rem;
  }

  .blog-index__bento-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: #64748b;
  }

  .blog-index__bento-author-avatar {
    width: 24px;
    height: 24px;
    border-radius: 50%;
  }

  .blog-index__bento-author-name {
    font-weight: 600;
  }

  .blog-index__bento-divider {
    opacity: 0.5;
  }

  /* All Posts Section */
  .blog-index__all-posts {
    margin-bottom: 6rem;
  }

  .blog-index__all-posts-header {
    margin-bottom: 3rem;
  }

  .blog-index__all-posts-title {
    margin-bottom: 2rem;
  }

  .blog-index__filters {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .blog-index__filter {
    padding: 0.75rem 1.5rem;
    border-radius: 9999px;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.875rem;
    color: #64748b;
    background: white;
    border: 2px solid #e5e7eb;
    transition: all 0.2s ease;
  }

  .blog-index__filter:hover {
    color: #003366;
    border-color: #003366;
  }

  .blog-index__filter--active {
    background: #003366;
    color: white;
    border-color: #003366;
  }

  .blog-index__posts-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin-bottom: 4rem;
  }

  .blog-index__post-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .blog-index__post-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.1);
  }

  .blog-index__post-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .blog-index__post-image-wrapper {
    position: relative;
    aspect-ratio: 8/5;
    overflow: hidden;
  }

  .blog-index__post-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .blog-index__post-link:hover .blog-index__post-image {
    transform: scale(1.05);
  }

  .blog-index__post-content {
    padding: 1.5rem;
  }

  .blog-index__post-category {
    display: inline-block;
    font-size: 0.7rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: #003366;
    margin-bottom: 0.75rem;
  }

  .blog-index__post-title {
    font-size: 1.25rem;
    font-weight: 700;
    line-height: 1.3;
    color: #0f172a;
    margin-bottom: 0.75rem;
  }

  .blog-index__post-description {
    font-size: 0.9375rem;
    line-height: 1.6;
    color: #64748b;
    margin-bottom: 1rem;
  }

  .blog-index__post-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding-top: 1rem;
    border-top: 1px solid #e5e7eb;
    font-size: 0.875rem;
    color: #64748b;
  }

  .blog-index__post-author-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
  }

  .blog-index__post-author-name {
    font-weight: 600;
  }

  .blog-index__post-divider {
    opacity: 0.5;
  }

  /* Pagination */
  .blog-index__pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }

  .blog-index__pagination-link {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    color: #003366;
    background: white;
    border: 2px solid #e5e7eb;
    transition: all 0.2s ease;
  }

  .blog-index__pagination-link:hover {
    background: #003366;
    color: white;
    border-color: #003366;
  }

  .blog-index__pagination-numbers {
    display: flex;
    gap: 0.5rem;
  }

  .blog-index__pagination-number {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 44px;
    height: 44px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    color: #64748b;
    background: white;
    border: 2px solid #e5e7eb;
    transition: all 0.2s ease;
  }

  .blog-index__pagination-number:hover {
    color: #003366;
    border-color: #003366;
  }

  .blog-index__pagination-number--active {
    background: #003366;
    color: white;
    border-color: #003366;
  }

  /* Newsletter */
  .blog-index__newsletter {
    background: linear-gradient(135deg, #003366 0%, #00509e 100%);
    border-radius: 16px;
    padding: 5rem 4rem;
    text-align: center;
    color: white;
  }

  .blog-index__newsletter-label {
    display: inline-block;
    padding: 0.5rem 1.5rem;
    background: rgba(255, 255, 255, 0.2);
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    border-radius: 4px;
    margin-bottom: 1.5rem;
  }

  .blog-index__newsletter-title {
    font-size: 3rem;
    font-weight: 900;
    margin-bottom: 1rem;
  }

  .blog-index__newsletter-description {
    font-size: 1.25rem;
    line-height: 1.6;
    margin-bottom: 2.5rem;
    opacity: 0.9;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .blog-index__newsletter-form {
    display: flex;
    gap: 1rem;
    max-width: 500px;
    margin: 0 auto;
  }

  .blog-index__newsletter-input {
    flex: 1;
    padding: 1.25rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    background: white;
    color: #0f172a;
  }

  .blog-index__newsletter-submit {
    padding: 1.25rem 2.5rem;
    border: none;
    border-radius: 8px;
    font-weight: 700;
    font-size: 1rem;
    background: #F5B400;
    color: #003366;
    cursor: pointer;
    transition: all 0.2s ease;
    white-space: nowrap;
  }

  .blog-index__newsletter-submit:hover {
    background: #ffc933;
    transform: translateY(-2px);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .blog-index__bento-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .blog-index__bento-card--1 {
      grid-column: span 2;
    }

    .blog-index__posts-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .blog-index__container {
      padding: 2rem 1rem;
    }

    .blog-index__hero-image-container {
      height: 400px;
    }

    .blog-index__hero-content {
      padding: 1.5rem;
    }

    .blog-index__hero-title {
      font-size: 1.5rem;
    }

    .blog-index__hero-description {
      font-size: 0.9375rem;
    }

    .blog-index__bento-grid {
      grid-template-columns: 1fr;
    }

    .blog-index__bento-card--1 {
      grid-column: span 1;
    }

    .blog-index__posts-grid {
      grid-template-columns: 1fr;
    }

    .blog-index__newsletter {
      padding: 3rem 2rem;
    }

    .blog-index__newsletter-title {
      font-size: 2rem;
    }

    .blog-index__newsletter-form {
      flex-direction: column;
    }

    .blog-index__pagination {
      flex-wrap: wrap;
    }
  }
</style>
