---
/**
 * Stats Grid Section - Display metrics/statistics in a grid
 * Generic component for showing numbers, KPIs, results
 */
import type { Language } from '../../../types/blog';

interface Props {
  section: any;
  lang: Language;
}

const { section, lang } = Astro.props;
const title = section.title?.[lang];
const stats = section.stats || [];
---

<section class="mb-12" id={section.id}>
  {title && (
    <h2 class="font-[family-name:var(--font-decorative)] text-[1.75rem] font-bold text-gray-900 mb-8 leading-tight tracking-tight">
      {title}
    </h2>
  )}
  
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {stats.map((stat: any) => {
      const statLabel = stat.label[lang];
      const statValue = stat.value[lang] || stat.value;
      const icon = stat.icon || null;
      const description = stat.description?.[lang];

      return (
        <div class="bg-gradient-to-br from-white to-slate-50 border border-slate-200 rounded-xl p-6 text-center hover:shadow-lg transition-shadow">
          {icon && <div class="text-4xl mb-3">{icon}</div>}
          
          <div class="text-3xl font-bold text-gray-900 mb-2">
            {statValue}
          </div>
          
          <div class="text-sm font-semibold text-gray-700 mb-2 uppercase tracking-wide">
            {statLabel}
          </div>
          
          {description && (
            <p class="text-sm text-gray-600 leading-relaxed">
              {description}
            </p>
          )}
        </div>
      );
    })}
  </div>
</section>
