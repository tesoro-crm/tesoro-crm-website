---
// Related Posts Component for JSON-based blog posts
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import type { Language } from '../../types/blog';

interface Props {
  currentPost: CollectionEntry<'blog'>;
  locale: Language;
  limit?: number;
}

const { currentPost, locale, limit = 3 } = Astro.props;
const blogData = currentPost.data;

// Get all published posts
const allPosts = await getCollection('blog', ({ data }) => !data.meta.draft);

// Filter related posts by category or tags
const relatedPosts = allPosts
  .filter(post =>
    post.data.meta.id !== blogData.meta.id &&
    (post.data.meta.category === blogData.meta.category ||
     post.data.meta.tags.some((tag: string) => blogData.meta.tags.includes(tag)))
  )
  .sort((a, b) => new Date(b.data.hero.publishDate).getTime() - new Date(a.data.hero.publishDate).getTime())
  .slice(0, limit);

// Localized title
const sectionTitle = locale === 'nl' ? 'Gerelateerde artikelen' : locale === 'es' ? 'ArtÃ­culos relacionados' : 'Related articles';
---

{relatedPosts.length > 0 && (
  <section class="related-posts">
    <h3 class="related-posts__title">{sectionTitle}</h3>
    <div class="related-posts__grid">
      {relatedPosts.map(post => {
        const postData = post.data;
        const title = postData.hero.title[locale];
        const description = postData.hero.description[locale];
        const heroImage = postData.hero.image;
        const publishDate = new Date(postData.hero.publishDate);
        
        return (
          <article class="related-posts__card">
            <img
              class="related-posts__image"
              src={heroImage.src}
              alt={heroImage.alt[locale]}
              loading="lazy"
            />
            <div class="related-posts__content">
              <h4 class="related-posts__card-title">
                <a href={`/blog/${postData.meta.id}`}>{title}</a>
              </h4>
              <p class="related-posts__description">{description}</p>
              <time class="related-posts__date" datetime={postData.hero.publishDate}>
                {publishDate.toLocaleDateString(locale === 'nl' ? 'nl-NL' : locale === 'es' ? 'es-ES' : 'en-US', {
                  month: 'short',
                  day: 'numeric'
                })}
              </time>
            </div>
          </article>
        );
      })}
    </div>
  </section>
)}

<style>
  .related-posts {
    margin-top: 4rem;
    padding-top: 3rem;
    border-top: 1px solid #e2e8f0;
  }

  .related-posts__title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #0f172a;
    margin-bottom: 2rem;
  }

  .related-posts__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .related-posts__card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .related-posts__card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px -2px rgba(0, 0, 0, 0.1);
  }

  .related-posts__image {
    width: 100%;
    height: 150px;
    object-fit: cover;
  }

  .related-posts__content {
    padding: 1.5rem;
  }

  .related-posts__card-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: #0f172a;
    margin-bottom: 0.75rem;
    line-height: 1.4;
  }

  .related-posts__card-title a {
    text-decoration: none;
    color: inherit;
  }

  .related-posts__card-title a:hover {
    color: #667eea;
  }

  .related-posts__description {
    color: #64748b;
    font-size: 0.875rem;
    line-height: 1.5;
    margin-bottom: 1rem;
  }

  .related-posts__date {
    font-size: 0.75rem;
    color: #6b7280;
  }

  @media (max-width: 768px) {
    .related-posts__grid {
      grid-template-columns: 1fr;
    }
  }
</style>
