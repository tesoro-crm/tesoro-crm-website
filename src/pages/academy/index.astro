---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { getLocale, getLocalizedPath } from '../../i18n/utils';
import type { Language } from '../../types/knowledge-base';

const academyGuides = await getCollection('academy');
const locale: Language = (getLocale(Astro.currentLocale, Astro.url) as Language) || 'nl';

// Sort by date (newest first)
const sortedGuides = academyGuides.sort((a, b) => {
  const dateA = new Date(a.data.meta.publishDate).getTime();
  const dateB = new Date(b.data.meta.publishDate).getTime();
  return dateB - dateA;
});

// Academy Category Structure
const categories: Record<string, { nl: string; en: string; es: string; priority: number; description: { nl: string; en: string; es: string } }> = {
  'foundation': {
    nl: 'Foundation',
    en: 'Foundation',
    es: 'Fundamentos',
    priority: 1,
    description: {
      nl: 'Waarom Tesoro? ROI calculaties en business case',
      en: 'Why Tesoro? ROI calculations and business case',
      es: '¿Por qué Tesoro? Cálculos ROI y caso de negocio'
    }
  },
  'revenue-mastery': {
    nl: 'Revenue Mastery',
    en: 'Revenue Mastery',
    es: 'Maestría en Ingresos',
    priority: 2,
    description: {
      nl: 'Strategieën om omzet te maximaliseren en deals te versnellen',
      en: 'Strategies to maximize revenue and accelerate deals',
      es: 'Estrategias para maximizar ingresos y acelerar deals'
    }
  },
  'success-stories': {
    nl: 'Success Stories',
    en: 'Success Stories',
    es: 'Historias de Éxito',
    priority: 3,
    description: {
      nl: 'Echte voorbeelden van makelaars die succesvol zijn met Tesoro',
      en: 'Real examples of agents succeeding with Tesoro',
      es: 'Ejemplos reales de agentes con éxito usando Tesoro'
    }
  },
  'advanced-strategies': {
    nl: 'Advanced Strategies',
    en: 'Advanced Strategies',
    es: 'Estrategias Avanzadas',
    priority: 4,
    description: {
      nl: 'Enterprise workflows, automatisering en team optimization',
      en: 'Enterprise workflows, automation and team optimization',
      es: 'Workflows empresariales, automatización y optimización de equipo'
    }
  },
};

// Sort categories by priority
const sortedCategories = Object.keys(categories).sort((a, b) => categories[a].priority - categories[b].priority);

const groupedGuides = sortedCategories.reduce((acc, cat) => {
  acc[cat] = sortedGuides.filter(g => g.data.meta.category === cat);
  return acc;
}, {} as Record<string, typeof sortedGuides>);

// Featured guides
const featuredGuides = sortedGuides.filter(g => g.data.meta.featured).slice(0, 3);

// Localized texts
const pageTitle = locale === 'nl' ? 'Tesoro Academy: Van €0 naar €100K+ Omzet' : locale === 'es' ? 'Tesoro Academy: De €0 a €100K+ Ingresos' : 'Tesoro Academy: From €0 to €100K+ Revenue';
const pageDescription = locale === 'nl'
  ? 'Business strategieën, ROI guides, en succes verhalen om je revenue te maximaliseren met Tesoro CRM.'
  : locale === 'es'
  ? 'Estrategias de negocio, guías ROI, e historias de éxito para maximizar tus ingresos con Tesoro CRM.'
  : 'Business strategies, ROI guides, and success stories to maximize your revenue with Tesoro CRM.';
const searchPlaceholder = locale === 'nl' ? 'Zoek: "ROI", "3x sneller", "€5K deal"...' : locale === 'es' ? 'Buscar: "ROI", "3x más rápido", "deal €5K"...' : 'Search: "ROI", "3x faster", "€5K deal"...';
const featuredText = locale === 'nl' ? 'Meest Impactvolle Guides' : locale === 'es' ? 'Guías Más Impactantes' : 'Most Impactful Guides';
const allCategoriesText = locale === 'nl' ? 'Alle Categorieën' : locale === 'es' ? 'Todas las Categorías' : 'All Categories';
const minutesText = locale === 'nl' ? 'min' : locale === 'es' ? 'min' : 'min';
---

<Layout title={pageTitle} description={pageDescription}>
  <div class="academy">
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero__container">
        <div class="hero__badge">
          <span class="hero__badge-text">Tesoro Academy</span>
        </div>
        <h1 class="hero__title">{pageTitle}</h1>
        <p class="hero__description">{pageDescription}</p>

        <!-- Success Stats -->
        <div class="hero__stats">
          <div class="stat">
            <span class="stat__number">3.2x</span>
            <span class="stat__label">{locale === 'nl' ? 'Meer Deals' : locale === 'es' ? 'Más Deals' : 'More Deals'}</span>
          </div>
          <div class="stat">
            <span class="stat__number">€35K+</span>
            <span class="stat__label">{locale === 'nl' ? 'Extra per Agent/Jaar' : locale === 'es' ? 'Extra por Agente/Año' : 'Extra per Agent/Year'}</span>
          </div>
          <div class="stat">
            <span class="stat__number">67%</span>
            <span class="stat__label">{locale === 'nl' ? 'Snellere Deal Closure' : locale === 'es' ? 'Cierre de Deals Más Rápido' : 'Faster Deal Closure'}</span>
          </div>
        </div>

        <!-- Search Bar -->
        <div class="hero__search">
          <span class="icon search-icon">search</span>
          <input
            type="search"
            placeholder={searchPlaceholder}
            class="search-input"
            id="academy-search"
          />
        </div>
      </div>
    </section>

    <div class="container">
      <!-- Featured Guides -->
      {featuredGuides.length > 0 && (
        <section class="featured">
          <h2 class="section-title">{featuredText}</h2>
          <div class="featured-grid">
            {featuredGuides.map(guide => {
              const data = guide.data;
              return (
                <a href={getLocalizedPath(`/academy/${data.meta.id}`, locale)} class="featured-card">
                  <div class="featured-content">
                    <div class="featured-meta">
                      <span class="featured-category">{categories[data.meta.category][locale]}</span>
                      {data.meta.roiImpact && <span class="roi-badge"><span class="icon icon-xs">trending_up</span> {data.meta.roiImpact}</span>}
                    </div>
                    <h3 class="featured-title">{data.hero.title[locale]}</h3>
                    <p class="featured-description">{data.hero.description[locale]}</p>
                    <div class="featured-footer">
                      <span class="reading-time"><span class="icon icon-sm">schedule</span> {data.meta.readingTime} {minutesText}</span>
                      {data.meta.timeToValue && <span class="time-badge"><span class="icon icon-sm">bolt</span> {data.meta.timeToValue}</span>}
                    </div>
                  </div>
                </a>
              );
            })}
          </div>
        </section>
      )}

      <!-- All Categories -->
      <section class="categories">
        <h2 class="section-title">{allCategoriesText}</h2>

        <div class="categories-grid">
          {sortedCategories.map((cat) => {
            const guides = groupedGuides[cat];
            if (guides.length === 0) return null;

            return (
              <div class="category-card">
                <div class="category-header">
                  <div class="category-info">
                    <h3 class="category-name">{categories[cat][locale]}</h3>
                    <p class="category-desc">{categories[cat].description[locale]}</p>
                    <span class="category-count">{guides.length} {locale === 'nl' ? 'guides' : locale === 'es' ? 'guías' : 'guides'}</span>
                  </div>
                </div>

                <div class="guides-list">
                  {guides.map(guide => {
                    const data = guide.data;
                    return (
                      <a href={getLocalizedPath(`/academy/${data.meta.id}`, locale)} class="guide-item">
                        <div class="guide-content">
                          <span class="guide-title">{data.hero.title[locale]}</span>
                          <div class="guide-meta">
                            <span class="guide-time"><span class="icon icon-xs">schedule</span> {data.meta.readingTime} {minutesText}</span>
                            {data.meta.roiImpact && <span class="guide-roi"><span class="icon icon-xs">trending_up</span> {data.meta.roiImpact}</span>}
                          </div>
                        </div>
                      </a>
                    );
                  })}
                </div>
              </div>
            );
          })}
        </div>
      </section>

      <!-- CTA Section -->
      <section class="cta-section">
        <div class="cta-card">
          <h3 class="cta-title">
            {locale === 'nl' ? 'Klaar om te beginnen?' : locale === 'es' ? '¿Listo para empezar?' : 'Ready to start?'}
          </h3>
          <p class="cta-description">
            {locale === 'nl'
              ? 'Bekijk onze technische documentatie voor step-by-step tutorials'
              : locale === 'es'
              ? 'Consulta nuestra documentación técnica para tutoriales paso a paso'
              : 'Check out our technical documentation for step-by-step tutorials'}
          </p>
          <a href={getLocalizedPath('/knowledge-base', locale)} class="cta-button">
            {locale === 'nl' ? 'Knowledge Base' : locale === 'es' ? 'Base de Conocimientos' : 'Knowledge Base'}
            <span class="icon icon-inline-end">arrow_forward</span>
          </a>
        </div>
      </section>
    </div>
  </div>
</Layout>

<style>
  .academy {
    min-height: 100vh;
    background: radial-gradient(ellipse at top, #fef3c7 0%, #ffffff 100%);
  }

  /* Hero Section */
  .hero {
    background: linear-gradient(135deg, #F5B400 0%, #003366 100%);
    color: white;
    padding: 4rem 0;
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='4'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    opacity: 0.3;
  }

  .hero__container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
    position: relative;
    z-index: 1;
  }

  .hero__badge {
    display: inline-block;
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(10px);
    padding: 0.5rem 1.5rem;
    border-radius: 50px;
    margin-bottom: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .hero__badge-text {
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .hero__title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 900;
    margin-bottom: 1.5rem;
    line-height: 1.1;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .hero__description {
    font-size: 1.25rem;
    opacity: 0.95;
    margin-bottom: 3rem;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.6;
  }

  /* Stats */
  .hero__stats {
    display: flex;
    justify-content: center;
    gap: 3rem;
    margin-bottom: 3rem;
    flex-wrap: wrap;
  }

  .stat {
    text-align: center;
  }

  .stat__number {
    display: block;
    font-size: 2.5rem;
    font-weight: 900;
    color: #F5B400;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .stat__label {
    font-size: 0.875rem;
    opacity: 0.9;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 600;
  }

  /* Search */
  .hero__search {
    position: relative;
    max-width: 700px;
    margin: 0 auto;
  }

  .search-icon {
    position: absolute;
    left: 1.25rem;
    top: 50%;
    transform: translateY(-50%);
    color: #64748b;
    z-index: 2;
    pointer-events: none;
  }

  .search-input {
    width: 100%;
    padding: 1.25rem 1.25rem 1.25rem 3.5rem;
    border: none;
    border-radius: 16px;
    font-size: 1.125rem;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .search-input:focus {
    outline: none;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    background: white;
    transform: translateY(-2px);
  }

  /* Container */
  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  /* Featured Section */
  .featured {
    margin: -2rem auto 5rem;
    position: relative;
    z-index: 2;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 800;
    color: #003366;
    margin-bottom: 2rem;
    text-align: center;
  }

  .featured-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
  }

  .featured-card {
    background: white;
    border-radius: 20px;
    padding: 2rem;
    text-decoration: none;
    color: inherit;
    border: 1px solid #e2e8f0;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .featured-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    border-color: #F5B400;
  }

  .featured-content {
    width: 100%;
  }

  .featured-meta {
    display: flex;
    gap: 0.75rem;
    margin-bottom: 1rem;
    flex-wrap: wrap;
  }

  .featured-category {
    font-size: 0.75rem;
    font-weight: 700;
    color: #003366;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .roi-badge {
    background: #F5B400;
    color: #92400e;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-weight: 600;
    font-size: 0.75rem;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .featured-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #003366;
    margin-bottom: 0.75rem;
    line-height: 1.3;
  }

  .featured-description {
    color: #64748b;
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .featured-footer {
    display: flex;
    gap: 1rem;
    font-size: 0.875rem;
    flex-wrap: wrap;
  }

  .reading-time {
    color: #64748b;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .time-badge {
    background: #003366;
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  /* Categories Section */
  .categories {
    margin: 5rem 0;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
  }

  .category-card {
    background: white;
    border-radius: 20px;
    padding: 2rem;
    border: 1px solid #e2e8f0;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .category-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
    border-color: #F5B400;
  }

  .category-header {
    margin-bottom: 2rem;
  }

  .category-info {
    width: 100%;
  }

  .category-name {
    font-size: 1.25rem;
    font-weight: 700;
    color: #003366;
    margin-bottom: 0.5rem;
  }

  .category-desc {
    color: #64748b;
    font-size: 0.875rem;
    line-height: 1.5;
    margin-bottom: 0.5rem;
  }

  .category-count {
    font-size: 0.75rem;
    color: #94a3b8;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .guides-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .guide-item {
    display: block;
    padding: 0.75rem;
    border-radius: 8px;
    text-decoration: none;
    color: inherit;
    transition: all 0.2s ease;
  }

  .guide-item:hover {
    background: #f8fafc;
  }

  .guide-content {
    width: 100%;
  }

  .guide-title {
    font-weight: 600;
    color: #003366;
    font-size: 0.875rem;
    line-height: 1.3;
    display: block;
    margin-bottom: 0.25rem;
  }

  .guide-meta {
    display: flex;
    gap: 0.5rem;
    font-size: 0.75rem;
    flex-wrap: wrap;
  }

  .guide-time {
    color: #64748b;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .guide-roi {
    color: #F5B400;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  /* CTA Section */
  .cta-section {
    margin: 5rem 0;
    text-align: center;
  }

  .cta-card {
    background: linear-gradient(135deg, #003366 0%, #F5B400 100%);
    color: white;
    padding: 3rem 2rem;
    border-radius: 24px;
    max-width: 800px;
    margin: 0 auto;
  }

  .cta-title {
    font-size: 2rem;
    font-weight: 800;
    margin-bottom: 1rem;
  }

  .cta-description {
    font-size: 1.125rem;
    opacity: 0.9;
    margin-bottom: 2rem;
  }

  .cta-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background: white;
    color: #003366;
    padding: 1rem 2rem;
    border-radius: 12px;
    text-decoration: none;
    font-weight: 700;
    font-size: 1.125rem;
    transition: all 0.3s ease;
  }

  .cta-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  .cta-button:hover .icon {
    transform: translateX(4px);
    transition: transform 0.3s ease;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero__title {
      font-size: 2.5rem;
    }

    .hero__stats {
      gap: 2rem;
    }

    .featured-grid,
    .categories-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('academy-search') as HTMLInputElement;

    searchInput?.addEventListener('input', (e) => {
      const query = (e.target as HTMLInputElement).value.toLowerCase().trim();

      const searchTargets = [
        ...document.querySelectorAll('.featured-card'),
        ...document.querySelectorAll('.guide-item'),
        ...document.querySelectorAll('.category-card')
      ];

      searchTargets.forEach(target => {
        const title = target.querySelector('.featured-title, .guide-title, .category-name')?.textContent?.toLowerCase() || '';
        const description = target.querySelector('.featured-description, .category-desc')?.textContent?.toLowerCase() || '';

        const isMatch = query === '' || title.includes(query) || description.includes(query);
        (target as HTMLElement).style.display = isMatch ? '' : 'none';
      });
    });
  });
</script>
